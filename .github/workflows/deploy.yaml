name: Build and deploy
on:
  push:
    branches:
      - '**'
env:
  app_name: bidrag_template_ui
  bucket_name_dev: bidrag-ui-static-files-dev
  bucket_name_prod: bidrag-ui-static-files-prod
  IS_FEATURE: ${{ github.ref != 'refs/heads/release' && github.ref != 'refs/heads/main'}}
  IS_DEV: ${{ github.ref == 'refs/heads/main' }}
  NPM_TOKEN: ${{ secrets.READER_TOKEN }}
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16.x
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: .yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Set environment variables for frontend build
        run: |
          if $IS_FEATURE ; then
              cat env/.env.dev >> $GITHUB_ENV
          elif $IS_DEV ; then
             cat env/.env.main >> $GITHUB_ENV
          else
             cat env/.env.prod  >> $GITHUB_ENV
          fi
      - name: Install yarn dependencies
        run: yarn --immutable
      - name: Lint
        run: yarn lint
      - name: Test
        run: yarn test
      - name: Build app
        run: yarn build
      - name: Upload static files
        uses: actions/upload-artifact@v3
        with:
          name: static_files
          path: ./dist

  deploy-to-feature:
    name: Deploy to feature
    runs-on: ubuntu-latest
    needs: build
    if: github.ref != 'refs/heads/main' && github.ref != 'refs/heads/release'
    steps:
      - name: Download static files
        uses: actions/download-artifact@v3
        with:
          name: static_files
          path: ./dist
      - name: Login GCP dev
        uses: google-github-actions/auth@v0.8.0
        with:
          credentials_json: ${{ secrets.GCP_SERVICEUSER_KEY_DEV }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
      - name: Upload static files to feature GCP bucket
        run: gsutil -m rsync -R -d dist gs://${{env.bucket_name_dev}}/${{env.app_name}}/feature/static

  deploy-to-main:
    name: Deploy to main
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download static files
        uses: actions/download-artifact@v3
        with:
          name: static_files
          path: ./dist
      - name: Login GCP dev
        uses: google-github-actions/auth@v0.8.0
        with:
          credentials_json: ${{ secrets.GCP_SERVICEUSER_KEY_DEV }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
      - name: Upload static files to dev GCP bucket
        run: gsutil -m rsync -R -d dist gs://${{env.bucket_name_dev}}/${{env.app_name}}/main/static
  deploy-to-prod:
    name: Deploy to prod
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/release'

    steps:
      - name: Download static files
        uses: actions/download-artifact@v3
        with:
          name: static_files
          path: ./dist
      - name: Login GCP dev
        uses: google-github-actions/auth@v0.8.0
        with:
          credentials_json: ${{ secrets.GCP_SERVICEUSER_KEY_PROD }}
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v0
      - name: Upload static files to prod GCP bucket
        run: gsutil -m rsync -R -d dist gs://${{env.bucket_name_prod}}/${{env.app_name}}/static